type="one.sample", alternative="greater")$n)
newsamp_size1
newsamp_size1=ceiling(pwr.t.test(d=efs1,sig.level=0.05,power=0.8,
type="one.sample", alternative="greater")$n)
newsamp_size1
samps3=replicate(10000,rchisq(596,df=3))
samps3=replicate(10000,rchisq(596,df=3))
test3=apply(samps3,2,function(x) t.test(x, mu=2.75,alternative="greater")$p.value)
test3=apply(samps3,2,function(x) t.test(x, mu=2.75,alternative="greater")$p.value)
final3=length(test3[which(test3<0.05)])/10000
final3
rchisq
samps2=replicate(10000,rchisq(27,df=3))
test2=apply(samps2,2,function(x) t.test(x, mu=2.75,alternative="greater")$p.value)
test2=apply(samps2,2,function(x) t.test(x, mu=2.75,alternative="greater")$p.value)
final2=length(test2[which(test2<0.05)])/10000
final2
library(pwr)
set.seed(01302003)
size=ceiling(pwr.t.test(d=0.5,sig.level=0.05, power=0.8, type="one.sample",
alternative = "greater")$n)
size
knitr::opts_chunk$set(echo = TRUE, highlight=FALSE)
mean(test3)
test3=apply(samps3,2,function(x) t.test(x, mu=2.75,alternative="greater")$p.value)
samps3=replicate(10000,rchisq(596,df=3))
test3=apply(samps3,2,function(x) t.test(x, mu=2.75,alternative="greater")$p.value)
mean(test3)
library(pwr)
set.seed(01302003)
size=ceiling(pwr.t.test(d=0.5,sig.level=0.05, power=0.8, type="one.sample",
alternative = "greater")$n)
size
samps=replicate(10000,rnorm(27,mean=99.5,sd=4.8))
test=apply(samps,2,function(x) t.test(x, mu=99,alternative="greater")$p.value)
test=apply(samps,2,function(x) t.test(x, mu=99,alternative="greater")$p.value)
final=length(test[which(test<0.05)])/10000
final=length(test[which(test<0.05)])/10000
final
test=apply(samps,2,function(x) t.test(x, mu=99,alternative="greater")
$p.value<0.05)
mean(test)
test3=apply(samps3,2,function(x) t.test(x, mu=2.75,alternative="greater")
$p.value<0.05)
test3=apply(samps3,2,function(x) t.test(x, mu=2.75,alternative="greater")
$p.value<0.05)
mean(test3)
samps2=replicate(10000,rchisq(27,df=3))
test2=apply(samps2,2,
function(x) t.test(x, mu=2.75,alternative="greater")
$p.value<0.05)
mean(test2)
knitr::opts_chunk$set(echo = TRUE, highlight=FALSE)
library(ggplot2)
library(ggplot2)
library(tidyverse)
library(devtools)
library(nlcor)
library(devtools)
library(nlcor)
setwd("C:/Users/fujos/OneDrive/Documents/R_Stat_Class")
gdp_dat = read.csv("GDP CAP.csv",header=TRUE)
mort_dat = read.csv("MORTALITY RATE.csv",header=TRUE)
overall_dat = inner_join(gdp_dat,mort_dat,by=c("TIME","LOCATION"))
overall_dat = na.omit(overall_dat)
setwd("C:/Users/fujos/OneDrive/Documents/R_Stat_Class")
gdp_dat = read.csv("GDP CAP.csv",header=TRUE)
mort_dat = read.csv("MORTALITY RATE.csv",header=TRUE)
overall_dat = inner_join(gdp_dat,mort_dat,by=c("TIME","LOCATION"))
overall_dat = na.omit(overall_dat)
overall_dat
highmort = length(overall_dat$MORT > 10)
highmort
lowmort = length(overall_dat$MORT <= 10)
lowmort
highmort = length(overall_dat$MORT > 10)
lowmort = length(overall_dat$MORT <= 10)
lowmort
highmort
lowmort
highgdp = length(overall_dat$GDP > 10)
lowgdp = length(overall_dat$GDP <= 10)
highgdp
lowgdp
highgdp = length(overall_dat[overall_dat$GDP > 30000])
highmort = length(overall_dat[overall_dat$MORT > 10])
lowmort = length(overall_dat[overall_dat$MORT <= 10])
highmort = length(overall_dat[overall_dat$MORT > 10,])
lowmort = length(overall_dat[overall_dat$MORT <= 10,])
highgdp = length(overall_dat[overall_dat$GDP > 30000,])
highgdp
lowgdp
lowgdp = length(overall_dat[overall_dat$GDP <= 10,])
highgdp
lowgdp
highgdp = length(overall_dat[overall_dat$GDP > 30000,])
lowgdp = length(overall_dat[overall_dat$GDP <= 30000,])
highgdp
lowgdp
highgdp = length(overall_dat[,overall_dat$GDP > 30000])
lowgdp = length(overall_dat[overall_dat$GDP <= 30000,])
highgdp
lowgdp
highmort = length(overall_dat[overall_dat$MORT > 10,])
lowmort = length(overall_dat[overall_dat$MORT <= 10,])
highgdp = length(overall_dat[overall_dat$GDP > 30000,])
lowgdp = length(overall_dat[overall_dat$GDP <= 30000,])
highgdp
lowgdp
highgdp = (overall_dat[overall_dat$GDP > 30000,])
lowgdp = length(overall_dat[overall_dat$GDP <= 30000,])
highgdp
highgdp = length(overall_dat[overall_dat$GDP > 30000,])
highgdp
highgdp = (overall_dat[overall_dat$GDP > 30000,])
highgdp
length(highgdp)
highgdp = numrows(overall_dat[overall_dat$GDP > 30000,])
highgdp = numrow(overall_dat[overall_dat$GDP > 30000,])
highgdp = nrows(overall_dat[overall_dat$GDP > 30000,])
highgdp = nrow(overall_dat[overall_dat$GDP > 30000,])
highmort = nrow(overall_dat[overall_dat$MORT > 10,])
lowmort = nrow(overall_dat[overall_dat$MORT <= 10,])
highgdp = nrow(overall_dat[overall_dat$GDP > 30000,])
lowgdp = nrow(overall_dat[overall_dat$GDP <= 30000,])
highgdp
lowgdp
highmort
lowmort
highgdp
lowgdp
highgdp
lowgdp
highmort
lowmort
overall_dat = overall_dat[overall_dat$TIME = 2019,]
overall_dat = overall_dat[overall_dat$TIME == 2019,]
highmort = nrow(overall_dat[overall_dat$MORT > 10,])
lowmort = nrow(overall_dat[overall_dat$MORT <= 10,])
highgdp = nrow(overall_dat[overall_dat$GDP > 30000,])
lowgdp = nrow(overall_dat[overall_dat$GDP <= 30000,])
highgdp
lowgdp
highmort
lowmort
highmort
highmort = nrow(overall_dat[overall_dat$MORT > 8,])
lowmort = nrow(overall_dat[overall_dat$MORT <= 8,])
highgdp = nrow(overall_dat[overall_dat$GDP > 30000,])
lowgdp = nrow(overall_dat[overall_dat$GDP <= 30000,])
highgdp
lowgdp
highmort
lowmort
highmort = nrow(overall_dat[overall_dat$MORT > 8 &&overall_dat[overall_dat$GDP > 30000,])
highmort = nrow(overall_dat[overall_dat$MORT > 8,][overall_dat$GDP > 30000,])
highmort
highhigh
highlow
highhigh = nrow(overall_dat[overall_dat$MORT > 8,][overall_dat$GDP > 30000,])
lowhigh = nrow(overall_dat[overall_dat$MORT <= 8,][overall_dat$GDP > 30000,])
highlow = nrow(overall_dat[overall_dat$MORT > 8,][overall_dat$GDP <= 30000,])
lowlow = nrow(overall_dat[overall_dat$MORT <= 8,][overall_dat$GDP <= 30000,])
highhigh
highlow
lowhigh
lowlow
highhigh = nrow(overall_dat[overall_dat$MORT > 8,][overall_dat$GDP > 30000,])
lowhigh = nrow(overall_dat[overall_dat$MORT <= 8,][overall_dat$GDP > 30000,])
highlow = nrow(overall_dat[overall_dat$MORT > 8,][overall_dat$GDP <= 30000,])
lowlow = nrow(overall_dat[overall_dat$MORT <= 8,][overall_dat$GDP <= 30000,])
M <- matrix(c(lowlow,highlow,lowhigh,highhigh), nrow=2, ncol=2)
dimnames(M) <- list(GDP=c("Low","High"), Eye=c("Blue","Brown"))
M
dimnames(M) <- list(GDP=c("Low","High"), Infant Mort Rate=c("Low","High"))
dimnames(M) <- list(GDP=c("Low","High"), Infant_Mort_Rate=c("Low","High"))
M
lowlow = nrow(overall_dat[overall_dat$MORT <= 8,])
M <- matrix(c(lowlow,highlow,lowhigh,highhigh), nrow=2, ncol=2)
dimnames(M) <- list(GDP=c("Low","High"), Infant_Mort_Rate=c("Low","High"))
M
lowlow = nrow(overall_dat[overall_dat$MORT <= 8,][overall_dat$GDP <= 30000,])
overall_dat[overall_dat$MORT <= 8,][overall_dat$GDP <= 30000,]
overall_dat[overall_dat$MORT <= 8,][overall_dat$GDP > 30000,]
dimnames(M) <- list(GDP=c("Low","High"), Infant_Mort_Rate=c("Low","High"))
M
overall_dat[overall_dat$MORT <= 8,][overall_dat$GDP > 30000,]
overall_dat[overall_dat$MORT <= 8,]
highhigh = nrow(highhigh[highhigh$GDP > 30000,])
highhigh = (overall_dat[overall_dat$MORT > 8,])
highhigh = nrow(highhigh[highhigh$GDP > 30000,])
highhigh = (overall_dat[overall_dat$MORT > 8,])
lowhigh = (overall_dat[overall_dat$MORT <= 8,])
highlow = (overall_dat[overall_dat$MORT > 8,])
lowlow = (overall_dat[overall_dat$MORT <= 8,])
highhigh = nrow(highhigh[highhigh$GDP > 30000,])
lowhigh = nrow(lowhigh[lowhigh$GDP > 30000,])
highlow = nrow(highlow[highlow$GDP<=30000])
lowlow = nrow(lowlow[lowlow$GDP <= 30000])
highlow = nrow(highlow[highlow$GDP<=30000,])
highhigh = (overall_dat[overall_dat$MORT > 8,])
lowhigh = (overall_dat[overall_dat$MORT <= 8,])
highlow = (overall_dat[overall_dat$MORT > 8,])
lowlow = (overall_dat[overall_dat$MORT <= 8,])
highhigh = nrow(highhigh[highhigh$GDP > 30000,])
lowhigh = nrow(lowhigh[lowhigh$GDP > 30000,])
highlow = nrow(highlow[highlow$GDP<=30000,])
lowlow = nrow(lowlow[lowlow$GDP <= 30000,])
M <- matrix(c(lowlow,highlow,lowhigh,highhigh), nrow=2, ncol=2)
dimnames(M) <- list(GDP=c("Low","High"), Infant_Mort_Rate=c("Low","High"))
M
gdp_dat = read.csv("GDP CAP.csv",header=TRUE)
mort_dat = read.csv("MORTALITY RATE.csv",header=TRUE)
overall_dat = inner_join(gdp_dat,mort_dat,by=c("TIME","LOCATION"))
overall_dat = na.omit(overall_dat)
highhigh = (overall_dat[overall_dat$MORT > 8,])
lowhigh = (overall_dat[overall_dat$MORT <= 8,])
highlow = (overall_dat[overall_dat$MORT > 8,])
lowlow = (overall_dat[overall_dat$MORT <= 8,])
highhigh = nrow(highhigh[highhigh$GDP > 30000,])
lowhigh = nrow(lowhigh[lowhigh$GDP > 30000,])
highlow = nrow(highlow[highlow$GDP<=30000,])
lowlow = nrow(lowlow[lowlow$GDP <= 30000,])
M <- matrix(c(lowlow,highlow,lowhigh,highhigh), nrow=2, ncol=2)
dimnames(M) <- list(GDP=c("Low","High"), Infant_Mort_Rate=c("Low","High"))
M
highhigh = (overall_dat[overall_dat$MORT > 8,])
lowhigh = (overall_dat[overall_dat$MORT <= 8,])
highlow = (overall_dat[overall_dat$MORT > 8,])
lowlow = (overall_dat[overall_dat$MORT <= 8,])
highhigh = nrow(highhigh[highhigh$GDP > 25000,])
lowhigh = nrow(lowhigh[lowhigh$GDP > 25000,])
highlow = nrow(highlow[highlow$GDP<=25000,])
lowlow = nrow(lowlow[lowlow$GDP <= 25000,])
M <- matrix(c(lowlow,highlow,lowhigh,highhigh), nrow=2, ncol=2)
dimnames(M) <- list(GDP=c("Low","High"), Infant_Mort_Rate=c("Low","High"))
M
highhigh = (overall_dat[overall_dat$MORT > 8,])
lowhigh = (overall_dat[overall_dat$MORT <= 8,])
highlow = (overall_dat[overall_dat$MORT > 8,])
lowlow = (overall_dat[overall_dat$MORT <= 8,])
highhigh = nrow(highhigh[highhigh$GDP > 24000,])
lowhigh = nrow(lowhigh[lowhigh$GDP > 24000,])
highlow = nrow(highlow[highlow$GDP<=24000,])
lowlow = nrow(lowlow[lowlow$GDP <= 24000,])
M <- matrix(c(lowlow,highlow,lowhigh,highhigh), nrow=2, ncol=2)
dimnames(M) <- list(GDP=c("Low","High"), Infant_Mort_Rate=c("Low","High"))
M
highhigh = nrow(highhigh[highhigh$GDP > 21000,])
highhigh = (overall_dat[overall_dat$MORT > 8,])
lowhigh = (overall_dat[overall_dat$MORT <= 8,])
highlow = (overall_dat[overall_dat$MORT > 8,])
lowlow = (overall_dat[overall_dat$MORT <= 8,])
highhigh = nrow(highhigh[highhigh$GDP > 21000,])
lowhigh = nrow(lowhigh[lowhigh$GDP > 21000,])
highlow = nrow(highlow[highlow$GDP<=21000,])
lowlow = nrow(lowlow[lowlow$GDP <= 21000,])
M <- matrix(c(lowlow,highlow,lowhigh,highhigh), nrow=2, ncol=2)
dimnames(M) <- list(GDP=c("Low","High"), Infant_Mort_Rate=c("Low","High"))
M
highhigh = (overall_dat[overall_dat$MORT > 7,])
lowhigh = (overall_dat[overall_dat$MORT <= 7,])
highlow = (overall_dat[overall_dat$MORT > 7,])
lowlow = (overall_dat[overall_dat$MORT <= 7,])
highhigh = nrow(highhigh[highhigh$GDP > 25000,])
lowhigh = nrow(lowhigh[lowhigh$GDP > 25000,])
highlow = nrow(highlow[highlow$GDP<=25000,])
lowlow = nrow(lowlow[lowlow$GDP <= 25000,])
M <- matrix(c(lowlow,highlow,lowhigh,highhigh), nrow=2, ncol=2)
dimnames(M) <- list(GDP=c("Low","High"), Infant_Mort_Rate=c("Low","High"))
M
highhigh = (overall_dat[overall_dat$MORT > 8,])
lowhigh = (overall_dat[overall_dat$MORT <= 8,])
highlow = (overall_dat[overall_dat$MORT > 8,])
lowlow = (overall_dat[overall_dat$MORT <= 8,])
highhigh = nrow(highhigh[highhigh$GDP > 25000,])
lowhigh = nrow(lowhigh[lowhigh$GDP > 25000,])
highlow = nrow(highlow[highlow$GDP<=25000,])
lowlow = nrow(lowlow[lowlow$GDP <= 25000,])
M <- matrix(c(lowlow,highlow,lowhigh,highhigh), nrow=2, ncol=2)
dimnames(M) <- list(GDP=c("Low","High"), Infant_Mort_Rate=c("Low","High"))
M
highhigh = (overall_dat[overall_dat$MORT > 8,])
lowhigh = (overall_dat[overall_dat$MORT <= 8,])
highlow = (overall_dat[overall_dat$MORT > 8,])
lowlow = (overall_dat[overall_dat$MORT <= 8,])
highhigh = nrow(highhigh[highhigh$GDP > 23000,])
lowhigh = nrow(lowhigh[lowhigh$GDP > 23000,])
highlow = nrow(highlow[highlow$GDP<=23000,])
lowlow = nrow(lowlow[lowlow$GDP <= 23000,])
M <- matrix(c(lowlow,highlow,lowhigh,highhigh), nrow=2, ncol=2)
dimnames(M) <- list(GDP=c("Low","High"), Infant_Mort_Rate=c("Low","High"))
M
highhigh = (overall_dat[overall_dat$MORT > 8,])
lowhigh = (overall_dat[overall_dat$MORT <= 8,])
highlow = (overall_dat[overall_dat$MORT > 8,])
lowlow = (overall_dat[overall_dat$MORT <= 8,])
highhigh = nrow(highhigh[highhigh$GDP > 25000,])
lowhigh = nrow(lowhigh[lowhigh$GDP > 25000,])
highlow = nrow(highlow[highlow$GDP<=25000,])
lowlow = nrow(lowlow[lowlow$GDP <= 25000,])
M <- matrix(c(lowlow,highlow,lowhigh,highhigh), nrow=2, ncol=2)
dimnames(M) <- list(GDP=c("Low","High"), Infant_Mort_Rate=c("Low","High"))
M
highhigh = (overall_dat[overall_dat$MORT > 7,])
lowhigh = (overall_dat[overall_dat$MORT <= 7,])
highlow = (overall_dat[overall_dat$MORT > 7,])
lowlow = (overall_dat[overall_dat$MORT <= 7,])
highhigh = nrow(highhigh[highhigh$GDP > 25000,])
lowhigh = nrow(lowhigh[lowhigh$GDP > 25000,])
highlow = nrow(highlow[highlow$GDP<=25000,])
lowlow = nrow(lowlow[lowlow$GDP <= 25000,])
M <- matrix(c(lowlow,highlow,lowhigh,highhigh), nrow=2, ncol=2)
dimnames(M) <- list(GDP=c("Low","High"), Infant_Mort_Rate=c("Low","High"))
M
highhigh = (overall_dat[overall_dat$MORT > 8,])
lowhigh = (overall_dat[overall_dat$MORT <= 8,])
highlow = (overall_dat[overall_dat$MORT > 8,])
lowlow = (overall_dat[overall_dat$MORT <= 8,])
highhigh = nrow(highhigh[highhigh$GDP > 25000,])
lowhigh = nrow(lowhigh[lowhigh$GDP > 25000,])
highlow = nrow(highlow[highlow$GDP<=25000,])
lowlow = nrow(lowlow[lowlow$GDP <= 25000,])
M <- matrix(c(lowlow,highlow,lowhigh,highhigh), nrow=2, ncol=2)
dimnames(M) <- list(GDP=c("Low","High"), Infant_Mort_Rate=c("Low","High"))
M
highhigh = (overall_dat[overall_dat$MORT > 8,])
lowhigh = (overall_dat[overall_dat$MORT <= 8,])
highlow = (overall_dat[overall_dat$MORT > 8,])
lowlow = (overall_dat[overall_dat$MORT <= 8,])
highhigh = nrow(highhigh[highhigh$GDP > 30000,])
lowhigh = nrow(lowhigh[lowhigh$GDP > 30000,])
highlow = nrow(highlow[highlow$GDP<=30000,])
lowlow = nrow(lowlow[lowlow$GDP <= 30000,])
M <- matrix(c(lowlow,highlow,lowhigh,highhigh), nrow=2, ncol=2)
dimnames(M) <- list(GDP=c("Low","High"), Infant_Mort_Rate=c("Low","High"))
M
highhigh = (overall_dat[overall_dat$MORT > 8,])
lowhigh = (overall_dat[overall_dat$MORT <= 8,])
highlow = (overall_dat[overall_dat$MORT > 8,])
lowlow = (overall_dat[overall_dat$MORT <= 8,])
highhigh = nrow(highhigh[highhigh$GDP > 25000,])
lowhigh = nrow(lowhigh[lowhigh$GDP > 25000,])
highlow = nrow(highlow[highlow$GDP<=25000,])
lowlow = nrow(lowlow[lowlow$GDP <= 25000,])
M <- matrix(c(lowlow,highlow,lowhigh,highhigh), nrow=2, ncol=2)
dimnames(M) <- list(GDP=c("Low","High"), Infant_Mort_Rate=c("Low","High"))
M
M
test1 <- chisq.test(M, correct=FALSE)
test1
library(ISLR2)
head(Auto)
Data <- Auto
#How many rows and columns are in this data set? 392 and 9
#Should we remove the column containing the name of the cars from our analysis? Yes - there are no duplicate
#names is not a good categorical variable
(Auto$name)
##How many variables are there in this data set? How many of the variables are quantitative?
#How many of the variables are categorical? Are there some variables where this distinction may
#not be obvious? Briefly explain. Reading the documentation will be useful. 8 variable - 3 categorical - 5 quantitative
summary(Auto)
levels(Data$origin)
#Change the origin column to a categorical variable
Data$origin <- factor(Data$origin)
is.factor(Data$origin)
head(Data$origin)
levels(Data$origin)
#Change origin categorical names
levels(Data$origin) <- c("American", "European", "Japanese")
#Scatterplot of Quant
pairs(Data[,1:7], lower.panel = NULL, main="Scatterplot of Quantitative Variables")
cor(Data[,1:7])
ggplot2::ggplot(Data, aes(x=origin, y=mpg))+ geom_boxplot()+ labs(x="Manufacturer", y="Mileage")
ggplot2::ggplot(Data, aes(x=origin, y=mpg))+ geom_boxplot()+ labs(x="Manufacturer", y="Mileage")
ggplot2::ggplot(Data, aes(x=origin, y=mpg))+ geom_boxplot()+ labs(x="Manufacturer", y="Mileage")
result<-lm(mpg~cylinders+displacement+horsepower+weight+acceleration+year, data=Data)
par(mfrow=c(2,2))
plot(result)
library(MASS) par(mfrow=c(1,1))
par(mfrow=c(1,1))
library(MASS)
MASS::boxcox(result)
result2<-lm(mpg**(-0.5)~cylinders+displacement+horsepower+weight+acceleration+year, data=Data)
par(mfrow=c(2,2))
plot(result2)
summary(result2)
par(mfrow=c(2,2))
plot(result)
plot(result)
plot(result)
result<-lm(mpg~cylinders+displacement+horsepower+weight+acceleration+year, data=Data)
plot(result)
MASS::boxcox(result)
par(mfrow=c(2,2))
plot(result)
library(MASS)
par(mfrow=c(1,1))
MASS::boxcox(result)
par(mfrow=c(2,2))
plot(result)
summary(result2)
pairwise<-multcomp::glht(reduced3, linfct = mcp(origin= "Tukey"))
summary(pairwise)
reduced3<-lm(mpg**(-0.5)~cylinders+horsepower+weight+year+origin, data=Data)
library(multcomp)
pairwise<-multcomp::glht(reduced3, linfct = mcp(origin= "Tukey"))
summary(pairwise)
par(mfrow=c(2,2))
plot(result2)
MASS::boxcox(result2)
library(fpp3)
library(dplyr)
library(purrr)
library(fma)
library(tsibble)
ts2csv <- function(objname, pname) {
dir.create(paste0('./data/', pname), showWarnings = FALSE)
fname <- paste0('./data/', pname, '/', objname, '.csv')
x = get(objname)
tryCatch({
readr::write_csv(x, fname)
print(fname)
}, warning = function(w) {
}, error = function(e) {
print(paste0(fname, " <-- error"))
}, finally = {
})
}
for (pname in list("fpp3", "tsibbledata", "tsibble", "fma")) {
x <- as.data.frame(data(package=pname)[3])
for (objname in x$results.Item) {
ts2csv(objname, pname)
}
}
readr::write_csv(as_tibble(fma::sheep), 'data/fma/sheep.csv')
readr::write_csv(as_tibble(fma::bicoal), 'data/fma/bicoal.csv')
ts2csv <- function(objname, pname) {
dir.create(paste0('data/', pname), showWarnings = FALSE)
fname <- paste0('data/', pname, '/', objname, '.csv')
x = get(objname)
tryCatch({
readr::write_csv(x, fname)
print(fname)
}, warning = function(w) {
}, error = function(e) {
print(paste0(fname, " <-- error"))
}, finally = {
})
}
for (pname in list("fpp3", "tsibbledata", "tsibble", "fma")) {
x <- as.data.frame(data(package=pname)[3])
for (objname in x$results.Item) {
ts2csv(objname, pname)
}
}
readr::write_csv(as_tibble(fma::sheep), 'data/fma/sheep.csv')
readr::write_csv(as_tibble(fma::sheep), './data/fma/sheep.csv')
setwd("C:/Users/fujos/Github/Machine-Learning-Model-Projects/NOTES_TIME_SERIES")
library(fpp3)
library(dplyr)
library(purrr)
library(fma)
library(tsibble)
ts2csv <- function(objname, pname) {
dir.create(paste0('data/', pname), showWarnings = FALSE)
fname <- paste0('data/', pname, '/', objname, '.csv')
x = get(objname)
tryCatch({
readr::write_csv(x, fname)
print(fname)
}, warning = function(w) {
}, error = function(e) {
print(paste0(fname, " <-- error"))
}, finally = {
})
}
readr::write_csv(as_tibble(fma::sheep), './data/fma/sheep.csv')
readr::write_csv(as_tibble(fma::bicoal), './data/fma/bicoal.csv')
for (pname in list("fpp3", "tsibbledata", "tsibble", "fma")) {
x <- as.data.frame(data(package=pname)[3])
for (objname in x$results.Item) {
ts2csv(objname, pname)
}
}
for (pname in list("fpp3", "tsibbledata", "tsibble", "fma")) {
x <- as.data.frame(data(package=pname)[3])
for (objname in x$results.Item) {
ts2csv(objname, pname)
}
}
readr::write_csv(as_tibble(fma::sheep), './data/fma/sheep.csv')
readr::write_csv(as_tibble(fma::bicoal), './data/fma/bicoal.csv')
ts2csv <- function(objname, pname) {
dir.create(paste0('./data/', pname), showWarnings = FALSE)
fname <- paste0('./data/', pname, '/', objname, '.csv')
x = get(objname)
tryCatch({
readr::write_csv(x, fname)
print(fname)
}, warning = function(w) {
}, error = function(e) {
print(paste0(fname, " <-- error"))
}, finally = {
})
}
for (pname in list("fpp3", "tsibbledata", "tsibble", "fma")) {
x <- as.data.frame(data(package=pname)[3])
for (objname in x$results.Item) {
ts2csv(objname, pname)
}
}
